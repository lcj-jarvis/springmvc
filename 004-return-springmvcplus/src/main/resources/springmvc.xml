<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd">
       <!--开启组件扫描器-->
       <context:component-scan base-package="com.mrlu.springmvc.controller"></context:component-scan>

       <!--声明springmvc框架中的视图解析器，帮助开发人员设置视图文件的路径-->
       <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
              <!--前缀：视图文件的路径-->
              <property name="prefix" value="/WEB-INF/view/"></property>
              <!--后缀：视图文件的扩展名-->
              <property name="suffix" value=".jsp"></property>
       </bean>

       <!--配置国际化资源文件-->
       <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
              <property name="basename" value="i18n"></property>
       </bean>

       <!--
           配置直接转发的页面,不用经过处理器就可以直接访问。
           /show：相当于http://localhost:8080/004_return_springmvcplus/show
           在浏览器输入：
           http://localhost:8080/004_return_springmvcplus/show

           view-name的show相当于/WEB-INF/view/show.jsp 因为配置了视图解析器

           但是这样配置，其他的请求就用不了。其他的请求要想直接使用，就要加上注解驱动
       -->
       <mvc:view-controller path="/show" view-name="show"></mvc:view-controller>
       <!--声明注解驱动-->
       <mvc:annotation-driven/>

       <!--自定义视图
           只靠视图解析器InternalResourceViewResolver是不行的。
           还需要配置BeanNameViewResolver解析器：使用视图的名字来解析视图
       -->
       <!--
       BeanNameViewResolver的解析视图的方法
       public View resolveViewName(String viewName, Locale locale) throws BeansException {
		ApplicationContext context = obtainApplicationContext();
		if (!context.containsBean(viewName)) {
			// Allow for ViewResolver chaining...
			return null;
		}
		if (!context.isTypeMatch(viewName, View.class)) {
			if (logger.isDebugEnabled()) {
				logger.debug("Found bean named '" + viewName + "' but it does not implement View");
			}
			// Since we're looking into the general ApplicationContext here,
			// let's accept this as a non-match and allow for chaining as well...
			return null;
		}
		return context.getBean(viewName, View.class); //通过视图的名字去容器中获取对象。
		所以要在自定义的视图中加@Component注解
	   }
       -->
       <!--通过order属性来定义视图解析器的优先级，order值越小优先级越高
           BeanNameViewResolver和InternalResourceViewResolver的默认优先级都是int类型的最大值
       -->
       <bean class="org.springframework.web.servlet.view.BeanNameViewResolver">
            <property name="order" value="100"></property>
       </bean>
       <context:component-scan base-package="com.mrlu.springmvc.views"></context:component-scan>

</beans>